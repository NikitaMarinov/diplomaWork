/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diploma.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class OrderDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5874399459108487988L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"OrderDTO\",\"namespace\":\"com.diploma.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"locationId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"transportId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"quantity\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"customerName\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"OrderStatus\",\"symbols\":[\"OPEN\",\"IN_PRODUCTION\",\"DELIVERY\",\"DELIVERED\",\"SOLD\",\"RETURNED\"]}},{\"name\":\"deliveryDuration\",\"type\":[\"null\",\"string\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<OrderDTO> ENCODER =
      new BinaryMessageEncoder<OrderDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<OrderDTO> DECODER =
      new BinaryMessageDecoder<OrderDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<OrderDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<OrderDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<OrderDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<OrderDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this OrderDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a OrderDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a OrderDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static OrderDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Long id;
   private java.lang.Long productId;
   private java.lang.Long locationId;
   private java.lang.Long transportId;
   private java.lang.Integer quantity;
   private java.lang.CharSequence customerName;
   private com.diploma.avro.OrderStatus status;
   private java.lang.CharSequence deliveryDuration;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public OrderDTO() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param productId The new value for productId
   * @param locationId The new value for locationId
   * @param transportId The new value for transportId
   * @param quantity The new value for quantity
   * @param customerName The new value for customerName
   * @param status The new value for status
   * @param deliveryDuration The new value for deliveryDuration
   */
  public OrderDTO(java.lang.Long id, java.lang.Long productId, java.lang.Long locationId, java.lang.Long transportId, java.lang.Integer quantity, java.lang.CharSequence customerName, com.diploma.avro.OrderStatus status, java.lang.CharSequence deliveryDuration) {
    this.id = id;
    this.productId = productId;
    this.locationId = locationId;
    this.transportId = transportId;
    this.quantity = quantity;
    this.customerName = customerName;
    this.status = status;
    this.deliveryDuration = deliveryDuration;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return productId;
    case 2: return locationId;
    case 3: return transportId;
    case 4: return quantity;
    case 5: return customerName;
    case 6: return status;
    case 7: return deliveryDuration;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: productId = (java.lang.Long)value$; break;
    case 2: locationId = (java.lang.Long)value$; break;
    case 3: transportId = (java.lang.Long)value$; break;
    case 4: quantity = (java.lang.Integer)value$; break;
    case 5: customerName = (java.lang.CharSequence)value$; break;
    case 6: status = (com.diploma.avro.OrderStatus)value$; break;
    case 7: deliveryDuration = (java.lang.CharSequence)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public java.lang.Long getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(java.lang.Long value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'locationId' field.
   * @return The value of the 'locationId' field.
   */
  public java.lang.Long getLocationId() {
    return locationId;
  }


  /**
   * Sets the value of the 'locationId' field.
   * @param value the value to set.
   */
  public void setLocationId(java.lang.Long value) {
    this.locationId = value;
  }

  /**
   * Gets the value of the 'transportId' field.
   * @return The value of the 'transportId' field.
   */
  public java.lang.Long getTransportId() {
    return transportId;
  }


  /**
   * Sets the value of the 'transportId' field.
   * @param value the value to set.
   */
  public void setTransportId(java.lang.Long value) {
    this.transportId = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public java.lang.Integer getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(java.lang.Integer value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'customerName' field.
   * @return The value of the 'customerName' field.
   */
  public java.lang.CharSequence getCustomerName() {
    return customerName;
  }


  /**
   * Sets the value of the 'customerName' field.
   * @param value the value to set.
   */
  public void setCustomerName(java.lang.CharSequence value) {
    this.customerName = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.diploma.avro.OrderStatus getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.diploma.avro.OrderStatus value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'deliveryDuration' field.
   * @return The value of the 'deliveryDuration' field.
   */
  public java.lang.CharSequence getDeliveryDuration() {
    return deliveryDuration;
  }


  /**
   * Sets the value of the 'deliveryDuration' field.
   * @param value the value to set.
   */
  public void setDeliveryDuration(java.lang.CharSequence value) {
    this.deliveryDuration = value;
  }

  /**
   * Creates a new OrderDTO RecordBuilder.
   * @return A new OrderDTO RecordBuilder
   */
  public static com.diploma.avro.OrderDTO.Builder newBuilder() {
    return new com.diploma.avro.OrderDTO.Builder();
  }

  /**
   * Creates a new OrderDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new OrderDTO RecordBuilder
   */
  public static com.diploma.avro.OrderDTO.Builder newBuilder(com.diploma.avro.OrderDTO.Builder other) {
    if (other == null) {
      return new com.diploma.avro.OrderDTO.Builder();
    } else {
      return new com.diploma.avro.OrderDTO.Builder(other);
    }
  }

  /**
   * Creates a new OrderDTO RecordBuilder by copying an existing OrderDTO instance.
   * @param other The existing instance to copy.
   * @return A new OrderDTO RecordBuilder
   */
  public static com.diploma.avro.OrderDTO.Builder newBuilder(com.diploma.avro.OrderDTO other) {
    if (other == null) {
      return new com.diploma.avro.OrderDTO.Builder();
    } else {
      return new com.diploma.avro.OrderDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for OrderDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<OrderDTO>
    implements org.apache.avro.data.RecordBuilder<OrderDTO> {

    private java.lang.Long id;
    private java.lang.Long productId;
    private java.lang.Long locationId;
    private java.lang.Long transportId;
    private java.lang.Integer quantity;
    private java.lang.CharSequence customerName;
    private com.diploma.avro.OrderStatus status;
    private java.lang.CharSequence deliveryDuration;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diploma.avro.OrderDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.locationId)) {
        this.locationId = data().deepCopy(fields()[2].schema(), other.locationId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.transportId)) {
        this.transportId = data().deepCopy(fields()[3].schema(), other.transportId);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.quantity)) {
        this.quantity = data().deepCopy(fields()[4].schema(), other.quantity);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.customerName)) {
        this.customerName = data().deepCopy(fields()[5].schema(), other.customerName);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.deliveryDuration)) {
        this.deliveryDuration = data().deepCopy(fields()[7].schema(), other.deliveryDuration);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
    }

    /**
     * Creates a Builder by copying an existing OrderDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diploma.avro.OrderDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.locationId)) {
        this.locationId = data().deepCopy(fields()[2].schema(), other.locationId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.transportId)) {
        this.transportId = data().deepCopy(fields()[3].schema(), other.transportId);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.quantity)) {
        this.quantity = data().deepCopy(fields()[4].schema(), other.quantity);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.customerName)) {
        this.customerName = data().deepCopy(fields()[5].schema(), other.customerName);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.deliveryDuration)) {
        this.deliveryDuration = data().deepCopy(fields()[7].schema(), other.deliveryDuration);
        fieldSetFlags()[7] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public java.lang.Long getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setProductId(java.lang.Long value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearProductId() {
      productId = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationId' field.
      * @return The value.
      */
    public java.lang.Long getLocationId() {
      return locationId;
    }


    /**
      * Sets the value of the 'locationId' field.
      * @param value The value of 'locationId'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setLocationId(java.lang.Long value) {
      validate(fields()[2], value);
      this.locationId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'locationId' field has been set.
      * @return True if the 'locationId' field has been set, false otherwise.
      */
    public boolean hasLocationId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'locationId' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearLocationId() {
      locationId = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'transportId' field.
      * @return The value.
      */
    public java.lang.Long getTransportId() {
      return transportId;
    }


    /**
      * Sets the value of the 'transportId' field.
      * @param value The value of 'transportId'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setTransportId(java.lang.Long value) {
      validate(fields()[3], value);
      this.transportId = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'transportId' field has been set.
      * @return True if the 'transportId' field has been set, false otherwise.
      */
    public boolean hasTransportId() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'transportId' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearTransportId() {
      transportId = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public java.lang.Integer getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setQuantity(java.lang.Integer value) {
      validate(fields()[4], value);
      this.quantity = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearQuantity() {
      quantity = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'customerName' field.
      * @return The value.
      */
    public java.lang.CharSequence getCustomerName() {
      return customerName;
    }


    /**
      * Sets the value of the 'customerName' field.
      * @param value The value of 'customerName'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setCustomerName(java.lang.CharSequence value) {
      validate(fields()[5], value);
      this.customerName = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'customerName' field has been set.
      * @return True if the 'customerName' field has been set, false otherwise.
      */
    public boolean hasCustomerName() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'customerName' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearCustomerName() {
      customerName = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.diploma.avro.OrderStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setStatus(com.diploma.avro.OrderStatus value) {
      validate(fields()[6], value);
      this.status = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearStatus() {
      status = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'deliveryDuration' field.
      * @return The value.
      */
    public java.lang.CharSequence getDeliveryDuration() {
      return deliveryDuration;
    }


    /**
      * Sets the value of the 'deliveryDuration' field.
      * @param value The value of 'deliveryDuration'.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder setDeliveryDuration(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.deliveryDuration = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'deliveryDuration' field has been set.
      * @return True if the 'deliveryDuration' field has been set, false otherwise.
      */
    public boolean hasDeliveryDuration() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'deliveryDuration' field.
      * @return This builder.
      */
    public com.diploma.avro.OrderDTO.Builder clearDeliveryDuration() {
      deliveryDuration = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public OrderDTO build() {
      try {
        OrderDTO record = new OrderDTO();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.productId = fieldSetFlags()[1] ? this.productId : (java.lang.Long) defaultValue(fields()[1]);
        record.locationId = fieldSetFlags()[2] ? this.locationId : (java.lang.Long) defaultValue(fields()[2]);
        record.transportId = fieldSetFlags()[3] ? this.transportId : (java.lang.Long) defaultValue(fields()[3]);
        record.quantity = fieldSetFlags()[4] ? this.quantity : (java.lang.Integer) defaultValue(fields()[4]);
        record.customerName = fieldSetFlags()[5] ? this.customerName : (java.lang.CharSequence) defaultValue(fields()[5]);
        record.status = fieldSetFlags()[6] ? this.status : (com.diploma.avro.OrderStatus) defaultValue(fields()[6]);
        record.deliveryDuration = fieldSetFlags()[7] ? this.deliveryDuration : (java.lang.CharSequence) defaultValue(fields()[7]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<OrderDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<OrderDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<OrderDTO>
    READER$ = (org.apache.avro.io.DatumReader<OrderDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    if (this.id == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.id);
    }

    if (this.productId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.productId);
    }

    if (this.locationId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.locationId);
    }

    if (this.transportId == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeLong(this.transportId);
    }

    if (this.quantity == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeInt(this.quantity);
    }

    if (this.customerName == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.customerName);
    }

    out.writeEnum(this.status.ordinal());

    if (this.deliveryDuration == null) {
      out.writeIndex(0);
      out.writeNull();
    } else {
      out.writeIndex(1);
      out.writeString(this.deliveryDuration);
    }

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      if (in.readIndex() != 1) {
        in.readNull();
        this.id = null;
      } else {
        this.id = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.productId = null;
      } else {
        this.productId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.locationId = null;
      } else {
        this.locationId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.transportId = null;
      } else {
        this.transportId = in.readLong();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.quantity = null;
      } else {
        this.quantity = in.readInt();
      }

      if (in.readIndex() != 1) {
        in.readNull();
        this.customerName = null;
      } else {
        this.customerName = in.readString(this.customerName instanceof Utf8 ? (Utf8)this.customerName : null);
      }

      this.status = com.diploma.avro.OrderStatus.values()[in.readEnum()];

      if (in.readIndex() != 1) {
        in.readNull();
        this.deliveryDuration = null;
      } else {
        this.deliveryDuration = in.readString(this.deliveryDuration instanceof Utf8 ? (Utf8)this.deliveryDuration : null);
      }

    } else {
      for (int i = 0; i < 8; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          if (in.readIndex() != 1) {
            in.readNull();
            this.id = null;
          } else {
            this.id = in.readLong();
          }
          break;

        case 1:
          if (in.readIndex() != 1) {
            in.readNull();
            this.productId = null;
          } else {
            this.productId = in.readLong();
          }
          break;

        case 2:
          if (in.readIndex() != 1) {
            in.readNull();
            this.locationId = null;
          } else {
            this.locationId = in.readLong();
          }
          break;

        case 3:
          if (in.readIndex() != 1) {
            in.readNull();
            this.transportId = null;
          } else {
            this.transportId = in.readLong();
          }
          break;

        case 4:
          if (in.readIndex() != 1) {
            in.readNull();
            this.quantity = null;
          } else {
            this.quantity = in.readInt();
          }
          break;

        case 5:
          if (in.readIndex() != 1) {
            in.readNull();
            this.customerName = null;
          } else {
            this.customerName = in.readString(this.customerName instanceof Utf8 ? (Utf8)this.customerName : null);
          }
          break;

        case 6:
          this.status = com.diploma.avro.OrderStatus.values()[in.readEnum()];
          break;

        case 7:
          if (in.readIndex() != 1) {
            in.readNull();
            this.deliveryDuration = null;
          } else {
            this.deliveryDuration = in.readString(this.deliveryDuration instanceof Utf8 ? (Utf8)this.deliveryDuration : null);
          }
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










