/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.diploma.avro;

import org.apache.avro.generic.GenericArray;
import org.apache.avro.specific.SpecificData;
import org.apache.avro.util.Utf8;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

@org.apache.avro.specific.AvroGenerated
public class ManufactureDTO extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5737526390495369350L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"ManufactureDTO\",\"namespace\":\"com.diploma.avro\",\"fields\":[{\"name\":\"id\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productId\",\"type\":\"long\"},{\"name\":\"name\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"brand\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"model\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"quantity\",\"type\":\"int\"},{\"name\":\"status\",\"type\":{\"type\":\"enum\",\"name\":\"OrderStatus\",\"symbols\":[\"OPEN\",\"IN_PRODUCTION\",\"DELIVERY\",\"DELIVERED\",\"SOLD\",\"RETURNED\"]}},{\"name\":\"productionTime\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"locationId\",\"type\":[\"null\",\"long\"],\"default\":null},{\"name\":\"productionEndTime\",\"type\":[\"null\",{\"type\":\"long\",\"logicalType\":\"timestamp-millis\"}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();
static {
    MODEL$.addLogicalTypeConversion(new org.apache.avro.data.TimeConversions.TimestampMillisConversion());
  }

  private static final BinaryMessageEncoder<ManufactureDTO> ENCODER =
      new BinaryMessageEncoder<ManufactureDTO>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<ManufactureDTO> DECODER =
      new BinaryMessageDecoder<ManufactureDTO>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<ManufactureDTO> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<ManufactureDTO> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<ManufactureDTO> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<ManufactureDTO>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this ManufactureDTO to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a ManufactureDTO from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a ManufactureDTO instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static ManufactureDTO fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

   private java.lang.Long id;
   private long productId;
   private java.lang.CharSequence name;
   private java.lang.CharSequence brand;
   private java.lang.CharSequence model;
   private int quantity;
   private com.diploma.avro.OrderStatus status;
   private java.lang.CharSequence productionTime;
   private java.lang.Long locationId;
   private java.time.Instant productionEndTime;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public ManufactureDTO() {}

  /**
   * All-args constructor.
   * @param id The new value for id
   * @param productId The new value for productId
   * @param name The new value for name
   * @param brand The new value for brand
   * @param model The new value for model
   * @param quantity The new value for quantity
   * @param status The new value for status
   * @param productionTime The new value for productionTime
   * @param locationId The new value for locationId
   * @param productionEndTime The new value for productionEndTime
   */
  public ManufactureDTO(java.lang.Long id, java.lang.Long productId, java.lang.CharSequence name, java.lang.CharSequence brand, java.lang.CharSequence model, java.lang.Integer quantity, com.diploma.avro.OrderStatus status, java.lang.CharSequence productionTime, java.lang.Long locationId, java.time.Instant productionEndTime) {
    this.id = id;
    this.productId = productId;
    this.name = name;
    this.brand = brand;
    this.model = model;
    this.quantity = quantity;
    this.status = status;
    this.productionTime = productionTime;
    this.locationId = locationId;
    this.productionEndTime = productionEndTime;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return id;
    case 1: return productId;
    case 2: return name;
    case 3: return brand;
    case 4: return model;
    case 5: return quantity;
    case 6: return status;
    case 7: return productionTime;
    case 8: return locationId;
    case 9: return productionEndTime;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: id = (java.lang.Long)value$; break;
    case 1: productId = (java.lang.Long)value$; break;
    case 2: name = (java.lang.CharSequence)value$; break;
    case 3: brand = (java.lang.CharSequence)value$; break;
    case 4: model = (java.lang.CharSequence)value$; break;
    case 5: quantity = (java.lang.Integer)value$; break;
    case 6: status = (com.diploma.avro.OrderStatus)value$; break;
    case 7: productionTime = (java.lang.CharSequence)value$; break;
    case 8: locationId = (java.lang.Long)value$; break;
    case 9: productionEndTime = (java.time.Instant)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'id' field.
   * @return The value of the 'id' field.
   */
  public java.lang.Long getId() {
    return id;
  }


  /**
   * Sets the value of the 'id' field.
   * @param value the value to set.
   */
  public void setId(java.lang.Long value) {
    this.id = value;
  }

  /**
   * Gets the value of the 'productId' field.
   * @return The value of the 'productId' field.
   */
  public long getProductId() {
    return productId;
  }


  /**
   * Sets the value of the 'productId' field.
   * @param value the value to set.
   */
  public void setProductId(long value) {
    this.productId = value;
  }

  /**
   * Gets the value of the 'name' field.
   * @return The value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }


  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'brand' field.
   * @return The value of the 'brand' field.
   */
  public java.lang.CharSequence getBrand() {
    return brand;
  }


  /**
   * Sets the value of the 'brand' field.
   * @param value the value to set.
   */
  public void setBrand(java.lang.CharSequence value) {
    this.brand = value;
  }

  /**
   * Gets the value of the 'model' field.
   * @return The value of the 'model' field.
   */
  public java.lang.CharSequence getModel() {
    return model;
  }


  /**
   * Sets the value of the 'model' field.
   * @param value the value to set.
   */
  public void setModel(java.lang.CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'quantity' field.
   * @return The value of the 'quantity' field.
   */
  public int getQuantity() {
    return quantity;
  }


  /**
   * Sets the value of the 'quantity' field.
   * @param value the value to set.
   */
  public void setQuantity(int value) {
    this.quantity = value;
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public com.diploma.avro.OrderStatus getStatus() {
    return status;
  }


  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(com.diploma.avro.OrderStatus value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'productionTime' field.
   * @return The value of the 'productionTime' field.
   */
  public java.lang.CharSequence getProductionTime() {
    return productionTime;
  }


  /**
   * Sets the value of the 'productionTime' field.
   * @param value the value to set.
   */
  public void setProductionTime(java.lang.CharSequence value) {
    this.productionTime = value;
  }

  /**
   * Gets the value of the 'locationId' field.
   * @return The value of the 'locationId' field.
   */
  public java.lang.Long getLocationId() {
    return locationId;
  }


  /**
   * Sets the value of the 'locationId' field.
   * @param value the value to set.
   */
  public void setLocationId(java.lang.Long value) {
    this.locationId = value;
  }

  /**
   * Gets the value of the 'productionEndTime' field.
   * @return The value of the 'productionEndTime' field.
   */
  public java.time.Instant getProductionEndTime() {
    return productionEndTime;
  }


  /**
   * Sets the value of the 'productionEndTime' field.
   * @param value the value to set.
   */
  public void setProductionEndTime(java.time.Instant value) {
    this.productionEndTime = value;
  }

  /**
   * Creates a new ManufactureDTO RecordBuilder.
   * @return A new ManufactureDTO RecordBuilder
   */
  public static com.diploma.avro.ManufactureDTO.Builder newBuilder() {
    return new com.diploma.avro.ManufactureDTO.Builder();
  }

  /**
   * Creates a new ManufactureDTO RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new ManufactureDTO RecordBuilder
   */
  public static com.diploma.avro.ManufactureDTO.Builder newBuilder(com.diploma.avro.ManufactureDTO.Builder other) {
    if (other == null) {
      return new com.diploma.avro.ManufactureDTO.Builder();
    } else {
      return new com.diploma.avro.ManufactureDTO.Builder(other);
    }
  }

  /**
   * Creates a new ManufactureDTO RecordBuilder by copying an existing ManufactureDTO instance.
   * @param other The existing instance to copy.
   * @return A new ManufactureDTO RecordBuilder
   */
  public static com.diploma.avro.ManufactureDTO.Builder newBuilder(com.diploma.avro.ManufactureDTO other) {
    if (other == null) {
      return new com.diploma.avro.ManufactureDTO.Builder();
    } else {
      return new com.diploma.avro.ManufactureDTO.Builder(other);
    }
  }

  /**
   * RecordBuilder for ManufactureDTO instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<ManufactureDTO>
    implements org.apache.avro.data.RecordBuilder<ManufactureDTO> {

    private java.lang.Long id;
    private long productId;
    private java.lang.CharSequence name;
    private java.lang.CharSequence brand;
    private java.lang.CharSequence model;
    private int quantity;
    private com.diploma.avro.OrderStatus status;
    private java.lang.CharSequence productionTime;
    private java.lang.Long locationId;
    private java.time.Instant productionEndTime;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(com.diploma.avro.ManufactureDTO.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.brand)) {
        this.brand = data().deepCopy(fields()[3].schema(), other.brand);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.model)) {
        this.model = data().deepCopy(fields()[4].schema(), other.model);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.quantity)) {
        this.quantity = data().deepCopy(fields()[5].schema(), other.quantity);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.productionTime)) {
        this.productionTime = data().deepCopy(fields()[7].schema(), other.productionTime);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.locationId)) {
        this.locationId = data().deepCopy(fields()[8].schema(), other.locationId);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.productionEndTime)) {
        this.productionEndTime = data().deepCopy(fields()[9].schema(), other.productionEndTime);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
    }

    /**
     * Creates a Builder by copying an existing ManufactureDTO instance
     * @param other The existing instance to copy.
     */
    private Builder(com.diploma.avro.ManufactureDTO other) {
      super(SCHEMA$);
      if (isValidValue(fields()[0], other.id)) {
        this.id = data().deepCopy(fields()[0].schema(), other.id);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.productId)) {
        this.productId = data().deepCopy(fields()[1].schema(), other.productId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.name)) {
        this.name = data().deepCopy(fields()[2].schema(), other.name);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.brand)) {
        this.brand = data().deepCopy(fields()[3].schema(), other.brand);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.model)) {
        this.model = data().deepCopy(fields()[4].schema(), other.model);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.quantity)) {
        this.quantity = data().deepCopy(fields()[5].schema(), other.quantity);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.status)) {
        this.status = data().deepCopy(fields()[6].schema(), other.status);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.productionTime)) {
        this.productionTime = data().deepCopy(fields()[7].schema(), other.productionTime);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.locationId)) {
        this.locationId = data().deepCopy(fields()[8].schema(), other.locationId);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.productionEndTime)) {
        this.productionEndTime = data().deepCopy(fields()[9].schema(), other.productionEndTime);
        fieldSetFlags()[9] = true;
      }
    }

    /**
      * Gets the value of the 'id' field.
      * @return The value.
      */
    public java.lang.Long getId() {
      return id;
    }


    /**
      * Sets the value of the 'id' field.
      * @param value The value of 'id'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setId(java.lang.Long value) {
      validate(fields()[0], value);
      this.id = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'id' field has been set.
      * @return True if the 'id' field has been set, false otherwise.
      */
    public boolean hasId() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'id' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearId() {
      id = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'productId' field.
      * @return The value.
      */
    public long getProductId() {
      return productId;
    }


    /**
      * Sets the value of the 'productId' field.
      * @param value The value of 'productId'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setProductId(long value) {
      validate(fields()[1], value);
      this.productId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'productId' field has been set.
      * @return True if the 'productId' field has been set, false otherwise.
      */
    public boolean hasProductId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'productId' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearProductId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }


    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setName(java.lang.CharSequence value) {
      validate(fields()[2], value);
      this.name = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearName() {
      name = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'brand' field.
      * @return The value.
      */
    public java.lang.CharSequence getBrand() {
      return brand;
    }


    /**
      * Sets the value of the 'brand' field.
      * @param value The value of 'brand'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setBrand(java.lang.CharSequence value) {
      validate(fields()[3], value);
      this.brand = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'brand' field has been set.
      * @return True if the 'brand' field has been set, false otherwise.
      */
    public boolean hasBrand() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'brand' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearBrand() {
      brand = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'model' field.
      * @return The value.
      */
    public java.lang.CharSequence getModel() {
      return model;
    }


    /**
      * Sets the value of the 'model' field.
      * @param value The value of 'model'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setModel(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.model = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'model' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearModel() {
      model = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'quantity' field.
      * @return The value.
      */
    public int getQuantity() {
      return quantity;
    }


    /**
      * Sets the value of the 'quantity' field.
      * @param value The value of 'quantity'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setQuantity(int value) {
      validate(fields()[5], value);
      this.quantity = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'quantity' field has been set.
      * @return True if the 'quantity' field has been set, false otherwise.
      */
    public boolean hasQuantity() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'quantity' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearQuantity() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public com.diploma.avro.OrderStatus getStatus() {
      return status;
    }


    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setStatus(com.diploma.avro.OrderStatus value) {
      validate(fields()[6], value);
      this.status = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearStatus() {
      status = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'productionTime' field.
      * @return The value.
      */
    public java.lang.CharSequence getProductionTime() {
      return productionTime;
    }


    /**
      * Sets the value of the 'productionTime' field.
      * @param value The value of 'productionTime'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setProductionTime(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.productionTime = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'productionTime' field has been set.
      * @return True if the 'productionTime' field has been set, false otherwise.
      */
    public boolean hasProductionTime() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'productionTime' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearProductionTime() {
      productionTime = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'locationId' field.
      * @return The value.
      */
    public java.lang.Long getLocationId() {
      return locationId;
    }


    /**
      * Sets the value of the 'locationId' field.
      * @param value The value of 'locationId'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setLocationId(java.lang.Long value) {
      validate(fields()[8], value);
      this.locationId = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'locationId' field has been set.
      * @return True if the 'locationId' field has been set, false otherwise.
      */
    public boolean hasLocationId() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'locationId' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearLocationId() {
      locationId = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'productionEndTime' field.
      * @return The value.
      */
    public java.time.Instant getProductionEndTime() {
      return productionEndTime;
    }


    /**
      * Sets the value of the 'productionEndTime' field.
      * @param value The value of 'productionEndTime'.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder setProductionEndTime(java.time.Instant value) {
      validate(fields()[9], value);
      this.productionEndTime = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'productionEndTime' field has been set.
      * @return True if the 'productionEndTime' field has been set, false otherwise.
      */
    public boolean hasProductionEndTime() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'productionEndTime' field.
      * @return This builder.
      */
    public com.diploma.avro.ManufactureDTO.Builder clearProductionEndTime() {
      productionEndTime = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public ManufactureDTO build() {
      try {
        ManufactureDTO record = new ManufactureDTO();
        record.id = fieldSetFlags()[0] ? this.id : (java.lang.Long) defaultValue(fields()[0]);
        record.productId = fieldSetFlags()[1] ? this.productId : (java.lang.Long) defaultValue(fields()[1]);
        record.name = fieldSetFlags()[2] ? this.name : (java.lang.CharSequence) defaultValue(fields()[2]);
        record.brand = fieldSetFlags()[3] ? this.brand : (java.lang.CharSequence) defaultValue(fields()[3]);
        record.model = fieldSetFlags()[4] ? this.model : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.quantity = fieldSetFlags()[5] ? this.quantity : (java.lang.Integer) defaultValue(fields()[5]);
        record.status = fieldSetFlags()[6] ? this.status : (com.diploma.avro.OrderStatus) defaultValue(fields()[6]);
        record.productionTime = fieldSetFlags()[7] ? this.productionTime : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.locationId = fieldSetFlags()[8] ? this.locationId : (java.lang.Long) defaultValue(fields()[8]);
        record.productionEndTime = fieldSetFlags()[9] ? this.productionEndTime : (java.time.Instant) defaultValue(fields()[9]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<ManufactureDTO>
    WRITER$ = (org.apache.avro.io.DatumWriter<ManufactureDTO>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<ManufactureDTO>
    READER$ = (org.apache.avro.io.DatumReader<ManufactureDTO>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}










